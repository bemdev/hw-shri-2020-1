{
	// Place your Рабочая область hw-2020-1 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create jest test for react": {
		"scope": "javascript,typescript",
		"prefix": "tre",
		"body": [
			"import ReactTest from './ReactTest';",
			"",
			"describe('ReactTest component scenario', () => {",
			"    it('ReactTest have right tag <tagComponent>', () => {",
			"        const wrapper = shallow(<ReactTest />);",
			"        expect(wrapper.type()).toBe('tagComponent');",
			"    });",
			"});"
		],
		"description": "Make simple react+jest test"
	},
	"Create jest test for react with redux mock store": {
		"scope": "javascript,typescript",
		"prefix": "trer",
		"body": [
			"import ReactTest from './ReactTest';",
			"",
			"describe('ReactTest component scenario', () => {",
			"    it('ReactTest not empty render', () => {",
			"        const wrapper = shallow(<ReactTest store={mockStore()} />);",
			"        expect(wrapper.isEmptyRender()).toBe(false);",
			"    });",
			"});"
		],
		"description": "Make simple react+jest test"
	}

}